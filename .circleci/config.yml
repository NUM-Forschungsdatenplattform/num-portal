version: 2.1

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - tag-version:
          requires:
            - test
          filters:
            branches:
              only:
                - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+)$/
      - build_and_deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+|master|develop)$/
jobs:
  test:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            echo 'UNIT TESTS NOT IMPLEMENTED!'
      - run:
          name: Run CVE scan
          command: |
            echo 'CVE SCAN NOT IMPLEMENTED!'
      - run:
          name: Run Sonar
          command: |
            echo 'SONAR NOT IMPLEMENTED!'
  tag-version:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - configure-git-for-ci-bot
      - run:
          name: Update Snapshot Develop Version
          description: |
            This automatically bumps the application version when there is a commit to release or develop branch
            If the commit is to the develop branch, there is a patch version bump, if the commit is to the
            release branch, we will bump the minor version
          command: |
            VERSION_NUMBER="$(echo $CIRCLE_BRANCH | awk -F'/' '{print $2;}')"
            echo "Updating the application version from the branch to ${VERSION_NUMBER}"
            ./mvnw versions:set -DnewVersion=$VERSION_NUMBER versions:commit

            git commit -am "updated patch version to v${VERSION_NUMBER} [skip ci]"
            git tag -a $VERSION_NUMBER -m "num-portal release version ${VERSION_NUMBER}"
            git push --set-upstream origin $CIRCLE_BRANCH
            git push origin --tags

            exit 0
            esac

  build_and_deploy:
    docker:
      - image: circleci/openjdk:11.0.8-jdk
        auth:
          username: $DOCKER_USER
          password: $DOCKER_HUB_PASSWORD
    steps:
      - checkout
      - configure-git-for-ci-bot
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and tag image and push
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
                TAG=$(./mvnw -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
            elif [ $CIRCLE_BRANCH = "develop" ]; then
                TAG=$CIRCLE_BRANCH
            else
                TAG="$(echo $CIRCLE_BRANCH | awk -F'/' '{print $2;}')-rc"
            fi
            echo "Publishing Docker image with following tag: ${TAG}"
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
            ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=$DOCKER_USER/num-portal:$TAG -DskipTests -Djdk.tls.client.protocols=TLSv1.2
            docker push $DOCKER_USER/num-portal:$TAG

commands:
  configure-git-for-ci-bot:
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0c:dd:08:d5:13:cf:20:3c:25:c4:f3:59:a8:a5:c4:36
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "50235421+ehrbase-tech-user@users.noreply.github.com"
            git config --global user.name "ci-bot"
            git remote -v
