version: 2.1

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 21 * * *"
          filters:
            branches:
              only:
                - nightly-builds
    jobs:
      - test:
          context: org-global
#  build_and_test:
#    jobs:
#      - test:
#          context: 
#            - org-global
#            - slack-secrets
#      - tag-version:
#          requires:
#            - test
#          filters:
#            branches:
#              only:
#                - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+|master)$/
#      - build_and_deploy:
#          requires:
#            - test
#          filters:
#            branches:
#              only:
#                - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+|master|develop)$/
  gka_test:
    jobs:
      - gkatest:
          context: 
            - org-global
            - slack-secrets

jobs:
  gkatest:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - slack/notify:
          event: always
          template: basic_fail_1

  test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - cache-out-maven-dependencies
      - run:
          name: Run unit tests
          command:  ./mvnw clean test
      - run:
          name: Run integration tests
          command: ./mvnw verify -P integration-tests
      - run:
          name: Run CVE scan
          command: ./mvnw dependency-check:check
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/unit-tests/
            mkdir -p ~/test-results/integration-tests/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/unit-tests/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/test-results/integration-tests/ \;
          when: always
      - store_artifacts:
          path: target/site/jacoco-merged-test-coverage-report
      - store_artifacts:
          path: target/dependency-check-report.html
      - store_test_results:
          path: ~/test-results/unit-tests/
      - store_test_results:
          path: ~/test-results/integration-tests/
      - sonarcloud/scan
      - cache-in-maven-dependencies
      - slack/notify:
          event: pass
          template: basic_success_1
  tag-version:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - configure-git-for-ci-bot
      - run:
          name: Update Snapshot Develop Version
          description: |
            This automatically bumps the application version when there is a commit to release branch
            It will set the version number to release branch version number, but it will do it only once. If the commit is
            to the master branch, then the pipeline will create a tag and push it to the Git
          command: |
            VERSION_NUMBER="$(echo $CIRCLE_BRANCH | awk -F'/v' '{print $2;}')"
            CURRENT_TAG=$(./mvnw -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
            if [ $VERSION_NUMBER != $CURRENT_TAG ]; then
              echo "Updating the application version from the branch to ${VERSION_NUMBER}"
              ./mvnw versions:set -DnewVersion=$VERSION_NUMBER versions:commit
              git commit -am "updated project version to v${VERSION_NUMBER} [skip ci]"
              git push --set-upstream origin $CIRCLE_BRANCH
            elif [ $CIRCLE_BRANCH = "master" ]; then
              git tag -a $VERSION_NUMBER -m "num-portal release version ${VERSION_NUMBER}"
              git push origin --tags
            fi

            exit 0
            esac

  build_and_deploy:
    docker:
      - image: cimg/openjdk:11.0.9
        auth:
          username: $DOCKER_USER
          password: $DOCKER_HUB_PASSWORD
    steps:
      - checkout
      - configure-git-for-ci-bot
      - cache-out-maven-dependencies
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and tag image and push
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
                TAG=$(./mvnw -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
                git push -u origin master:nightly-builds # Make sure that the nightly build branch is up-to-date with master
            elif [ $CIRCLE_BRANCH = "develop" ]; then
                TAG=$CIRCLE_BRANCH
            else
                TAG="$(echo $CIRCLE_BRANCH | awk -F'/v' '{print $2;}')-rc$CIRCLE_BUILD_NUM"
            fi
            echo "Publishing Docker image with following tag: ${TAG}"
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
            ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=$DOCKER_USER/num-portal:$TAG -DskipTests
            docker push $DOCKER_USER/num-portal:$TAG
      - cache-in-maven-dependencies

##  notify:
#    docker:
#      - image: 'cimg/base:stable'
#    steps:
#      - slack/notify:
#          custom: |
#            {
#              "blocks": [
#                {
#                  "type": "section",
#                  "fields": [
#                    {
#                      "type": "plain_text",
#                      "text": "*This is a text notification*",
#                      "emoji": true
#                    }
#                  ]
#                }
#              ]
#            }
#          event: fail
#          branch_pattern: "nightly-builds"

commands:
  configure-git-for-ci-bot:
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0c:dd:08:d5:13:cf:20:3c:25:c4:f3:59:a8:a5:c4:36
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "50235421+ehrbase-tech-user@users.noreply.github.com"
            git config --global user.name "ci-bot"
            git remote -v


  cache-out-maven-dependencies:
    steps:
      - run:
          name: Generate Cache Checksum for Maven Dependencies
          command: find /home/circleci/project -name 'pom.xml' | sort | xargs cat > /tmp/num-portal_maven_cache_seed
      - restore_cache:
          key: v1-num-portal-deps-

  cache-in-maven-dependencies:
    steps:
      - save_cache:
          key: v1-num-portal-deps-{{ checksum "/tmp/num-portal_maven_cache_seed" }}
          paths:
            - ~/.m2


orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2
  slack: circleci/slack@4.0
